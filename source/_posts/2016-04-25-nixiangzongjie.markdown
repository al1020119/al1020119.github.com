---
layout: post
title: "逆向工程总结"
date: 2016-04-25 13:32:08 +0800
comments: true
categories: Summary

---


不忍心作结，虽然才刚刚开始，很多东西都没有细细总结，只可惜很多东西并非自己想的那么顺利。

才干了一年多的活，就见证了两个项目的死亡，这个世界远远超过自己想象中的残酷。第一个项目只历经一两个版本，无啥感情可言；第二个项目就完完全全经历了诞生到死亡的全过程，若说无感情的话，那我就是彻头彻尾的混蛋了。虽然终结是必然的，但是比预料中的更快更突然。悲剧往往就是在这种感情的强烈碰撞下诞生的。





<!--more-->




祸不单行，我丢了我的iPhone。那一刻我真真实实感觉到，失去自己熟悉的亲密的东西的那种无助。若是人，不敢想象。

好在人有着天生的自愈能力。换了新环境已快两月，感觉以前的那些已经过去很久似的，早已渐渐淡忘。新项目的生活紧张而细致，繁密且高精度的工作会让人无暇关注其它。而且，偶尔偶尔的小波澜，比如说某人被离职了，会在你神经绷得更紧更紧。

不过今天，发现那个当时也凝聚了不少心血的app终于上了AppStore，推迟了足足半年有余，惊讶中夹杂着深深的悲凉。当然这不是最让人伤心的。回想起自己后来去搞了越狱版，于是乎就听到了“我的AppStore版”和“你们的越狱版”之类的言语，似乎这个东西当时几个人搞出来，就算被重构至少还有不少头文件还标记着我的名字的东西，已经被彻头彻尾和我无关了。所以，这个东西上了AppStore，似乎我也没资格感到高兴。不，应该是连感到悲哀的权利都没有。

最后，我没有在Appstore下载它，更别说刷一个五星评论了。这个可能还保留着我那些刚学iOS开发而写出来的无比稚嫩的代码的东西，经历了一次次的延期、需求变更，甚至一度被挂起、拆分，最终上了架，可惜连我都觉得，这东西上不上架，已经无啥意义了。

只是偶尔，即使已经不做越狱版了，我还会到BigBoss的统计页面，看看那个只发了四个版本的越狱版，到底被下载了多少次（BigBoss上的统计是对所有人公开的，其它渠道的下载统计等等数据，对我来说基本不可能拿得到）。看到那个数字居然还在缓慢增长，停止更新后居然还能慢慢多了两万多的下载量，嘴角还是轻轻上扬一下。当然，我知道下载量和日活量是两个完全不同的概念，卸载是个很方便的操作，况且那个支持越狱版通过桌面长按卸载deb的功能还是我做的哩。很二逼的需求，我想，这么一个没啥用户基础的软件，居然还提供快捷卸载方法，二到家了。

说说新项目吧。至少这个长期占据AppStore前100名中一席的app，肯定有其牛逼的原因。果不其然，要融入到这个团队之中，我至少需要先脱层皮，不然拉低整个团队的技术水平和智商水准可是不被容忍的。中途有一段时间没活干，还在内疚着没帮上什么忙，最近接连三个版本两两并行，于是就累得跟狗一样了。效率，以及对工作量的估算，对我来说还是个硬伤。

吐槽了半天，没总结半点和越狱开发相关的东西。可能之后会很少接触这些东西了。以此作结，纪念那段偶尔挺二逼但也挺随意的时光。 



改bundleid，启动后改掉取bundleid的方法，让它返回的bundle固定为原来那个，然后重签名就可以了

如果不hook那个取bundleid的方法，登录几次就会提示你用的不是正版，然后让你退出登录

不过要我做盗版或多开监测的话，会加上签名验证

不越狱其实也可以做，二进制文件里有个dylb的map，可以差一条记录上去，挂载你自己的动态库。然后把你自己写的用来hook代码的动态库一起签名放到ipa包里安装就行了。不过略麻烦。

使用load command,在mach o的头里,不过也是需求重新签名

bundleid在二进制中也编译的有吧，仅仅改plots

直接改plist就行

bundleid在二进制中也编译的有吧，仅仅改Plist,好像不行

行的，已验证

这么说ipa重签名是可以的，难道苹果只验证plist文件？

不过为了原有代码里面的判断逻辑啥的正常，最好再didfinishlaunch后hook掉NSBundle 的bundleIdentifier，让其返回原来的。

你改为新的bundleid，然后用你自己的证书签名，苹果就当这个app是你写的了

可以用theos写个tweak，然后用runtime想这么玩就随意你了·

主要还是看能不能分析出原有的逻辑。

用theos就得越狱了吧


噗。。。都在问iOS逆向问题，有没有谁了解Android的防逆向的所谓的『加固』处理，原理是什么呢？各加的加固处理效果如何？

逆向的关键只有一句 找到入口


做过别人 app 的分析,主要 reveal 分析 view 解构，猜测对方怎么做的效果。。。

reveal神器，用越狱的手机+插件来拖界面

然后 dump 二进制文件，可以看别人在一些地方用到了什么库

应该只能逆向出oc的头文件，不能逆向出m文件吧？

另外用 cocoapod 的可以从 dump 的头文件看得出来，因为，每个 pod 都有一个 dummy class[偷笑]一下就知道对方用了什么库了

嗯嗯，是的，不过可以反汇编，其实 hopper 给出来的反汇编代码已经有很大帮助了

reveal只能看到界面相关的东西,分析界面用的,要是想把别人的逻辑都搞清楚还是挺费劲的。了解个大体还行。


全部逻辑搞清楚的话，其实很费劲的。。。

不过找关键逻辑，或者想要的东西的话，还可以了

现在好多https请求是单向验证，一个charles就搞定接口了

之前搞雅虎天气找他们地图图片怎么做的

最无语的是搞金融的都不加双向验证

我们在接口上现在HTTPS+参数加密

不过对于普通抓包还是够了，一开始还用zlib压缩了一层，然后发现安卓会有问题，就放弃zlib只用gzip简单压了一下

大家开发的时候后天接口地址是不是都放在头文件里面？地址都放在.m里面了.不过抓包跟踪一下也差不多能抓出来


我们通信用的ice


reveal感觉用得比较舒服就是调试辅助，例如找别人写的view的名字


用过找别人是用啥控件,唯一设备ID没啥好研究的吧,或者取出指针

哈哈哈，找别人用的控件我也干过。。。Reveal抓出来一看，原来也是用的第三方的View，在github上就找到了。。。

例如一个feed流里一个用户的头像不相似了，想看下用户头像的地址是不是有问题，就直接选中对应imageview，然后看地址，进到xcode里暂停，直接打po [0xxxxxxxxx url] 就好了

url还是sd_url了···忘记了···啊哈哈哈哈哈··反正这个原理···

@飞宇。 有啊，我是做广告相关的。大家拿出去钱砸广告新增用户就是按照这个排重的。idfa可以更改，很多刷榜公司就是靠假良骗钱的。

不是，是反设备清洗,防止一台设备伪造出成千上万设备

这不还有IP可查么

你可能花100w做了100w新增用户，其实是用一台设备搞出来的

ip也可以用vpn自动刷新，没听过刷榜公司么！之前积分墙火的时候，淘宝上一搜一大把。

开发相关的安全问题，除了代码安全，资源文件安全，接口安全，还有什么没？

人员安全？比如别把代码上传到Github里

最主要是别把各种 key 传 github 了，以及自建的 git 的访问权限控制好

别人家的app怎么在xcode里暂停调试呢？之家的···调试别人家的bug干啥···别人家的用lldbserver挂上去，也能断点

因为看到你前面说reveal配合调试imageview了

那个是调试自家的APP时用

ssh+debugserver是能调试 但是不太方便 有没有更好用的工具？iPhoneTunnel

还有一个办法，不过我试了下新版，好像经常卡死，不晓得现在还没好，你可以试试
给你截图

竟然截不了图了············直接说把，直接用xcode的attach proce

想问一下，从iOS8.4后，还有什么方法可以访问到非越狱机子的Document目录吗？

刚才那个方法想成功attch上，得给个啥东西来着··竟然一时想不起来了···

是不是要给debugserver重签名

给大家再说个大家可能不知道的tips，iOS5后用rvictl可以把iPhone的网卡虚拟到mac上，然后···你懂的···

估计现在在非越狱机子上非常难做到了。 毕竟iOS8.4后对沙盒的权限限制较大

iExplorer可以部分备份指定app，间接访问到document目录





